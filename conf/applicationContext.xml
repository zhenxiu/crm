<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<context:component-scan base-package="com.atguigu.crm">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>

	<context:property-placeholder location="classpath:db.properties"/>
	
	<bean id="dataSource" 
		  class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>	  
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	
	<!-- 整合SpringData -->
	<!-- 配置整合 JPA 的 EntityManagerFactory -->
	<bean id="entityManagerFactory" 
			class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
		</property>	
		<property name="packagesToScan" value="com.atguigu.crm"></property>
		<!-- 配置 JPA 实现产品的基本属性 -->
		<property name="jpaProperties">
			<props>
				<!-- 二级缓存相关 -->
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="net.sf.ehcache.configurationResourceName">ehcache-hibernate.xml</prop>
				<!-- 生成的数据表的列的映射策略 -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<!-- hibernate 基本属性 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>
	
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 配置自动扫描 Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.atguigu.crm"></property>
	</bean>
	
	<!-- 配置 JPA 的事务管理器 -->
    <bean id="jpaTransactionManager"
    	class="org.springframework.orm.jpa.JpaTransactionManager">
    	<property name="entityManagerFactory" ref="entityManagerFactory"></property>	
    </bean>
    
    <!-- 配置基于 JpaTransactionManager 的事务属性 -->
    <tx:advice id="txAdvice" transaction-manager="jpaTransactionManager">
    	<tx:attributes>
    		<tx:method name="get*" read-only="true"/>
    		<tx:method name="*"/>
    	</tx:attributes>
    </tx:advice>
    
    <!-- 配置基于 JpaTransactionManager 的事务管理的 Service -->
    <aop:config>
    	<!-- 指定针对于哪些类使用事务 -->
    	<aop:pointcut expression="execution(* com.atguigu.crm.service.jpa.*.*(..))" id="txPointcut"/>
    	<!-- 把事务切点和事务属性关联起来 -->
    	<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config>
    
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <!-- 配置 SpringData -->
	<jpa:repositories base-package="com.atguigu.crm"
		entity-manager-factory-ref="entityManagerFactory"></jpa:repositories>

	<!--  
		一个项目中使用多种持久化技术的关键是如何让他们能使用分别的 事务管理！
		1. 若使用的 mybatis 和 jbdc, 则不存在整合的问题. 因为他们使用的是同一个 TransactionManager
		2. 若使用的是 mybatis 和 jpa (或 hibernate), 则会导致他们使用的不是同一个 TransactionManager, 且
		JpaTransactionManager 和 DataSourceTransactionManager 没有继承关系. 
		1). 对于一类事务使用 @Transaction 注解
		2). 对于一类事务直接在 Spring 的配置文件中进行配置
	-->
	
</beans>
